{"version":3,"sources":["Title.tsx","Footer.tsx","reportWebVitals.ts","pages/Qiita.tsx","pages/Zenn.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","drawer","breakpoints","up","width","flexShrink","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","link","textDecoration","color","palette","text","primary","Title","classes","useTheme","React","useState","mobileOpen","setMobileOpen","sites","siteLinks","slice","map","value","index","toLowerCase","handleDrawerToggle","className","Divider","List","siteName","to","onClick","ListItem","button","ListItemText","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","Typography","variant","noWrap","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","Footer","Box","p","textAlign","bgcolor","Link","href","target","rel","underline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Qiita","Zenn","App","exact","path","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.c8ca0a9f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  CssBaseline,\r\n  Drawer,\r\n} from '@material-ui/core';\r\nimport { Divider, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport {\r\n  makeStyles,\r\n  useTheme,\r\n  Theme,\r\n  createStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    link: {\r\n      textDecoration: 'none',\r\n      color: theme.palette.text.primary,\r\n    },\r\n  }),\r\n);\r\n\r\nconst Title: React.FunctionComponent = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  // 技術記事が掲載されているサイト\r\n  const sites: string[] = ['Qiita', 'Zenn'];\r\n  // 各サイトへのリンク\r\n  let siteLinks: string[] = sites.slice();\r\n  siteLinks = siteLinks.map((value: string, index: number) => {\r\n    return index === 0 ? '/' : '/' + value.toLowerCase();\r\n  });\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n        {sites.map((siteName: string, index: number) => (\r\n          <RouterLink\r\n            to={siteLinks[index]}\r\n            className={classes.link}\r\n            key={siteName}\r\n            onClick={handleDrawerToggle}\r\n          >\r\n            <ListItem button>\r\n              <ListItemText primary={siteName} />\r\n            </ListItem>\r\n          </RouterLink>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            技術記事チェッカー\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer}>\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Drawer\r\n          variant=\"temporary\"\r\n          anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n          open={mobileOpen}\r\n          onClose={handleDrawerToggle}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      </nav>\r\n      <main>\r\n        <div className={classes.toolbar} />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React from 'react';\nimport { Box, Link } from '@material-ui/core';\n\nconst Footer: React.FunctionComponent = () => {\n  return (\n    <Box\n      p={1}\n      textAlign=\"center\"\n      bgcolor=\"text.secondary\"\n      color=\"background.paper\"\n    >\n      This page is created by&nbsp;\n      <Link\n        href=\"https://github.com/bpeldi2oerkd8\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        color=\"inherit\"\n        underline=\"always\"\n      >\n        bpeldi2oerkd8\n      </Link>\n      .\n    </Box>\n  );\n};\n\nexport default Footer;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Qiita: React.FunctionComponent = () => {\n  return <h2>Qiita</h2>;\n};\n\nexport default Qiita;\n","import React from 'react';\n\nconst Zenn: React.FunctionComponent = () => {\n  return <h2>Zenn</h2>;\n};\n\nexport default Zenn;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Qiita from './pages/Qiita';\nimport Zenn from './pages/Zenn';\n\nconst App: React.FunctionComponent = () => {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Qiita />\n        </Route>\n        <Route path=\"/zenn\">\n          <Zenn />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './index.css';\r\nimport Title from './Title';\r\nimport Footer from './Footer';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Title />\r\n      <App />\r\n      <Footer />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}