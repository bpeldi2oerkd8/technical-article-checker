{"version":3,"sources":["Title.tsx","Footer.tsx","reportWebVitals.ts","common/Selector.tsx","common/Article.tsx","common/ArticleList.tsx","pages/Qiita.tsx","pages/Zenn.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","drawer","breakpoints","up","width","flexShrink","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","link","textDecoration","color","palette","text","primary","Title","classes","useTheme","React","useState","mobileOpen","setMobileOpen","sites","siteLinks","slice","map","value","index","toLowerCase","handleDrawerToggle","className","Divider","List","siteName","to","onClick","ListItem","button","ListItemText","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","Typography","variant","noWrap","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","Footer","Box","p","textAlign","bgcolor","Link","href","target","rel","underline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","formControl","margin","minWidth","selectEmpty","marginTop","Selector","props","FormControl","InputLabel","id","Select","labelId","topic","onChange","handleChange","MenuItem","FormHelperText","Article","data","Card","CardHeader","avatar","Avatar","alt","src","userIcon","title","userId","subheader","updatedAt","CardContent","mb","body","CardActions","Button","url","fontSize","flexGrow","padding","secondary","ArticleList","articleData","my","Grid","container","length","item","xs","sm","lg","articleId","getQiitaData","apiUrl","accessToken","a","axios","get","headers","Authorization","res","article","user","profile_image_url","convertUpdatedAt","updated_at","convertBody","catch","console","log","replace","convertedBody","removeMarkdown","Qiita","setTopic","setArticleData","useEffect","baseApiUrl","oneWeekAgo","Date","setDate","getDate","from","getFullYear","getMonth","process","aData","event","Zenn","App","Container","maxWidth","exact","path","ReactDOM","render","Fragment","basename","document","getElementById"],"mappings":"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","file":"static/js/main.7fcc6e46.chunk.js","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  CssBaseline,\n  Drawer,\n} from '@material-ui/core';\nimport { Divider, List, ListItem, ListItemText } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {\n  makeStyles,\n  useTheme,\n  Theme,\n  createStyles,\n} from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    drawer: {\n      [theme.breakpoints.up('sm')]: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    link: {\n      textDecoration: 'none',\n      color: theme.palette.text.primary,\n    },\n  }),\n);\n\nconst Title: React.FunctionComponent = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  // 技術記事が掲載されているサイト\n  const sites: string[] = ['Qiita', 'Zenn'];\n  // 各サイトへのリンク\n  let siteLinks: string[] = sites.slice();\n  siteLinks = siteLinks.map((value: string, index: number) => {\n    return index === 0 ? '/' : '/' + value.toLowerCase();\n  });\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List>\n        {sites.map((siteName: string, index: number) => (\n          <RouterLink\n            to={siteLinks[index]}\n            className={classes.link}\n            key={siteName}\n            onClick={handleDrawerToggle}\n          >\n            <ListItem button>\n              <ListItemText primary={siteName} />\n            </ListItem>\n          </RouterLink>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            技術記事チェッカー\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer}>\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Drawer\n          variant=\"temporary\"\n          anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </nav>\n      <main>\n        <div className={classes.toolbar} />\n      </main>\n    </div>\n  );\n};\n\nexport default Title;\n","import React from 'react';\nimport { Box, Link } from '@material-ui/core';\n\nconst Footer: React.FunctionComponent = () => {\n  return (\n    <Box\n      p={1}\n      textAlign=\"center\"\n      bgcolor=\"text.secondary\"\n      color=\"background.paper\"\n    >\n      This page is created by&nbsp;\n      <Link\n        href=\"https://github.com/bpeldi2oerkd8\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        color=\"inherit\"\n        underline=\"always\"\n      >\n        bpeldi2oerkd8\n      </Link>\n      .\n    </Box>\n  );\n};\n\nexport default Footer;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 180,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }),\r\n);\r\n\r\ntype Props = {\r\n  topic: string;\r\n  handleChange: (event: React.ChangeEvent<{ value: unknown }>) => void;\r\n};\r\n\r\nconst Selector: React.FunctionComponent<Props> = (props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  // 選択対象のトピックのリスト\r\n  const topics: string[] = [\r\n    'Python',\r\n    'JavaScript',\r\n    'TypeScript',\r\n    'PHP',\r\n    'Java',\r\n    'Docker',\r\n    'AWS',\r\n    'Go',\r\n    'Rust',\r\n    'Flutter',\r\n  ];\r\n\r\n  return (\r\n    <Box p={2} textAlign=\"right\">\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"topic-select-helper-label\">トピック</InputLabel>\r\n        <Select\r\n          labelId=\"topic-select-helper-label\"\r\n          id=\"topic-select-helper\"\r\n          value={props.topic}\r\n          onChange={props.handleChange}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          {topics.map((topic: string) => (\r\n            <MenuItem value={topic} key={topic}>\r\n              {topic}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n        <FormHelperText>トピックを選択</FormHelperText>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Selector;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport Box from '@material-ui/core/Box';\r\nimport type { ArticleData } from '../type/ArticleData';\r\n\r\ntype Props = {\r\n  data: ArticleData;\r\n};\r\n\r\nconst Article: React.FunctionComponent<Props> = (props: Props) => {\r\n  const data = props.data;\r\n\r\n  return (\r\n    <Card variant=\"outlined\">\r\n      <CardHeader\r\n        avatar={<Avatar alt=\"ImageIcon\" src={data.userIcon} />}\r\n        title={data.userId} //user.id\r\n        subheader={data.updatedAt + 'に更新'} //updated_at\r\n      />\r\n      <CardContent>\r\n        {/* title */}\r\n        <Box mb={1}>\r\n          <Typography variant=\"h6\">{data.title}</Typography>\r\n        </Box>\r\n        {/* body */}\r\n        <Typography noWrap>{data.body}</Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          href={data.url} //url\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          記事を見る（外部サイトに移動します）\r\n          <LaunchIcon fontSize=\"inherit\" />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Article from '../common/Article';\nimport type { ArticleData } from '../type/ArticleData';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }),\n);\n\ntype Props = {\n  articleData: ArticleData[];\n};\n\nconst ArticleList: React.FunctionComponent<Props> = (props: Props) => {\n  const classes = useStyles();\n  const articleData = props.articleData;\n\n  return (\n    <Box my={2}>\n      <Box textAlign=\"center\">\n        <h3>最新記事一覧</h3>\n      </Box>\n      <div className={classes.root}>\n        <Grid container spacing={3}>\n          {articleData.length > 0 &&\n            articleData.map((data: ArticleData) => (\n              <Grid key={data.articleId} item xs={12} sm={6} lg={4}>\n                <Article data={data} />\n              </Grid>\n            ))}\n        </Grid>\n      </div>\n    </Box>\n  );\n};\n\nexport default ArticleList;\n","import React from 'react';\r\nimport Selector from '../common/Selector';\r\nimport ArticleList from '../common/ArticleList';\r\nimport Box from '@material-ui/core/Box';\r\nimport axios from 'axios';\r\nimport type { ArticleData } from '../type/ArticleData';\r\nimport removeMarkdown from 'remove-markdown';\r\n\r\ntype Tag = {\r\n  name: string;\r\n  versions: string[];\r\n};\r\n\r\ntype Group = {\r\n  created_at: string;\r\n  description: string;\r\n  name: string;\r\n  private: boolean;\r\n  updated_at: string;\r\n  url_name: string;\r\n};\r\n\r\ntype TeamMemberShip = {\r\n  name: string;\r\n};\r\n\r\ntype ApiResponse = {\r\n  rendered_body: string;\r\n  body: string;\r\n  coediting: boolean;\r\n  comment_count: number;\r\n  create_at: string;\r\n  group: Group | null;\r\n  id: string;\r\n  likes_count: number;\r\n  private: boolean;\r\n  reactions_count: number;\r\n  tags: Tag[];\r\n  title: string;\r\n  updated_at: string;\r\n  url: string;\r\n  user: {\r\n    description: string;\r\n    facebook_id: string;\r\n    followees_count: number;\r\n    followers_count: number;\r\n    github_login_name: string;\r\n    id: string;\r\n    item_count: number;\r\n    linkedin_id: string;\r\n    location: string;\r\n    name: string;\r\n    organization: string;\r\n    permanent_id: number;\r\n    profile_image_url: string;\r\n    team_only: boolean;\r\n    twitter_screen_name: string | null;\r\n    website_url: string;\r\n  };\r\n  page_views_count: number | null;\r\n  team_membership: TeamMemberShip | null;\r\n};\r\n\r\n// Qiita APIからデータの取得\r\nconst getQiitaData = async (apiUrl: string, accessToken: string) => {\r\n  let articleData: ArticleData[];\r\n\r\n  if (accessToken) {\r\n    // APIキーがある場合\r\n    articleData = await axios\r\n      .get<ApiResponse[]>(apiUrl, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const resData = res.data;\r\n        const aData: ArticleData[] = resData.map((article) => {\r\n          return {\r\n            articleId: article.id,\r\n            userIcon: article.user.profile_image_url,\r\n            userId: article.user.id,\r\n            updatedAt: convertUpdatedAt(article.updated_at),\r\n            title: article.title,\r\n            body: convertBody(article.body),\r\n            url: article.url,\r\n          };\r\n        });\r\n        return aData;\r\n      })\r\n      .catch(() => {\r\n        console.log('failed.');\r\n        return [];\r\n      });\r\n  } else {\r\n    // APIキーがない場合\r\n    articleData = await axios\r\n      .get<ApiResponse[]>(apiUrl)\r\n      .then((res) => {\r\n        const resData = res.data;\r\n        const aData: ArticleData[] = resData.map((article) => {\r\n          return {\r\n            articleId: article.id,\r\n            userIcon: article.user.profile_image_url,\r\n            userId: article.user.id,\r\n            updatedAt: convertUpdatedAt(article.updated_at),\r\n            title: article.title,\r\n            body: convertBody(article.body),\r\n            url: article.url,\r\n          };\r\n        });\r\n        return aData;\r\n      })\r\n      .catch(() => {\r\n        console.log('failed.');\r\n        return [];\r\n      });\r\n  }\r\n\r\n  return articleData;\r\n};\r\n\r\n// 日付フォーマットの変更（YYYY/MM/DD hh:mm:ss）\r\nconst convertUpdatedAt = (updatedAt: string) => {\r\n  updatedAt = updatedAt.replace(/-/g, '/');\r\n  updatedAt = updatedAt.replace(/T/g, ' ');\r\n  updatedAt = updatedAt.replace(/\\+09:00/g, '');\r\n  return updatedAt;\r\n};\r\n\r\n// bodyの変換（Markdown→plain text）\r\nconst convertBody = (body: string) => {\r\n  let convertedBody = removeMarkdown(body);\r\n  convertedBody = convertedBody.slice(0, 50);\r\n  return convertedBody;\r\n};\r\n\r\nconst Qiita: React.FunctionComponent = () => {\r\n  const [topic, setTopic] = React.useState('');\r\n  const [articleData, setArticleData] = React.useState<ArticleData[]>([]);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setTopic(event.target.value as string);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      const baseApiUrl = 'https://qiita.com/api/v2/items';\r\n\r\n      const oneWeekAgo = new Date();\r\n      oneWeekAgo.setDate(oneWeekAgo.getDate() - 7); // 1週間前\r\n      const from =\r\n        oneWeekAgo.getFullYear() +\r\n        '-' +\r\n        (oneWeekAgo.getMonth() + 1) +\r\n        '-' +\r\n        oneWeekAgo.getDate();\r\n\r\n      const apiUrl = topic\r\n        ? baseApiUrl + '?query=tag%3A' + topic + '+updated%3A%3E' + from\r\n        : baseApiUrl;\r\n\r\n      const accessToken = process.env.REACT_APP_QIITA_ACCESS_TOKEN\r\n        ? process.env.REACT_APP_QIITA_ACCESS_TOKEN\r\n        : '';\r\n\r\n      // APIによるデータの取得\r\n      const aData = await getQiitaData(apiUrl, accessToken);\r\n      setArticleData(aData as ArticleData[]);\r\n    })();\r\n  }, [setArticleData, topic]);\r\n\r\n  return (\r\n    <Box>\r\n      <Box textAlign=\"center\">\r\n        <h2>Qiita</h2>\r\n      </Box>\r\n      <Selector topic={topic} handleChange={handleChange} />\r\n      <ArticleList articleData={articleData} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Qiita;\r\n","import React from 'react';\r\nimport Selector from '../common/Selector';\r\nimport ArticleList from '../common/ArticleList';\r\nimport Box from '@material-ui/core/Box';\r\nimport type { ArticleData } from '../type/ArticleData';\r\n\r\nconst Zenn: React.FunctionComponent = () => {\r\n  const [topic, setTopic] = React.useState('');\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setTopic(event.target.value as string);\r\n  };\r\n\r\n  const articleData: ArticleData[] = [];\r\n\r\n  return (\r\n    <Box>\r\n      <Box textAlign=\"center\">\r\n        <h2>Zenn (Beta版)</h2>\r\n        <p>Zennから公式のAPIが提供されていないため、Beta版</p>\r\n      </Box>\r\n      <Selector topic={topic} handleChange={handleChange} />\r\n      <ArticleList articleData={articleData} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Zenn;\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n// import './App.css';\nimport Qiita from './pages/Qiita';\nimport Zenn from './pages/Zenn';\nimport Container from '@material-ui/core/Container';\n\nconst App: React.FunctionComponent = () => {\n  return (\n    <Container maxWidth=\"lg\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Qiita />\n        </Route>\n        <Route path=\"/zenn\">\n          <Zenn />\n        </Route>\n      </Switch>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport Title from './Title';\nimport Footer from './Footer';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nReactDOM.render(\n  <React.Fragment>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Title />\n      <App />\n      <Footer />\n    </Router>\n  </React.Fragment>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}