{"version":3,"sources":["Title.tsx","pages/Qiita.tsx","pages/Zenn.tsx","App.tsx","Footer.tsx","reportWebVitals.ts","index.tsx"],"names":["drawerWidth","useStyles","makeStyles","theme","createStyles","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","display","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","link","textDecoration","color","palette","text","primary","Title","classes","useTheme","React","useState","open","setOpen","sites","siteLinks","slice","map","value","index","toLowerCase","Box","CssBaseline","AppBar","position","className","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","Drawer","anchor","paper","direction","Divider","List","siteName","to","ListItem","button","ListItemText","Qiita","Zenn","App","exact","path","Footer","p","textAlign","bgcolor","Link","href","target","rel","underline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.5de0f949.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx'; // 可変クラスのためのライブラリ\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  CssBaseline,\r\n  Box,\r\n  Drawer,\r\n} from '@material-ui/core';\r\nimport { Divider, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport {\r\n  makeStyles,\r\n  useTheme,\r\n  Theme,\r\n  createStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n    link: {\r\n      textDecoration: 'none',\r\n      color: theme.palette.text.primary,\r\n    },\r\n  }),\r\n);\r\n\r\nconst Title: React.FunctionComponent = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  // 技術記事が掲載されているサイト\r\n  const sites: string[] = ['Qiita', 'Zenn'];\r\n  // 各サイトへのリンク\r\n  let siteLinks: string[] = sites.slice();\r\n  siteLinks = siteLinks.map((value: string, index: number) => {\r\n    return index === 0 ? '/' : '/' + value.toLowerCase();\r\n  });\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\">\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"sticky\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">技術記事チェッカー</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {sites.map((siteName: string, index: number) => (\r\n            <RouterLink\r\n              to={siteLinks[index]}\r\n              className={classes.link}\r\n              key={siteName}\r\n            >\r\n              <ListItem button>\r\n                <ListItemText primary={siteName} />\r\n              </ListItem>\r\n            </RouterLink>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React from 'react';\n\nconst Qiita: React.FunctionComponent = () => {\n  return <h2>Qiita</h2>;\n};\n\nexport default Qiita;\n","import React from 'react';\n\nconst Zenn: React.FunctionComponent = () => {\n  return <h2>Zenn</h2>;\n};\n\nexport default Zenn;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Qiita from './pages/Qiita';\nimport Zenn from './pages/Zenn';\n\nconst App: React.FunctionComponent = () => {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Qiita />\n        </Route>\n        <Route path=\"/zenn\">\n          <Zenn />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { Box, Link } from '@material-ui/core';\n\nconst Footer: React.FunctionComponent = () => {\n  return (\n    <Box\n      p={1}\n      textAlign=\"center\"\n      bgcolor=\"text.secondary\"\n      color=\"background.paper\"\n    >\n      This page is created by&nbsp;\n      <Link\n        href=\"https://github.com/bpeldi2oerkd8\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        color=\"inherit\"\n        underline=\"always\"\n      >\n        bpeldi2oerkd8\n      </Link>\n      .\n    </Box>\n  );\n};\n\nexport default Footer;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport Title from './Title';\nimport App from './App';\nimport Footer from './Footer';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Title />\n      <App />\n      <Footer />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}